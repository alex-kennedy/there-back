{"version":3,"sources":["viz.js","components/Readme.js","components/InfoPanel.js","App.js","index.js"],"names":["VizData","locs","outbound","this","addIDToLocs","addSizeToLocs","inbound","reverseCommutes","addIDToCommutes","Object","entries","from","toLocations","to","data","assign","id","commutes","keys","a","b","origin","total","isNaN","work","edu","Hexagon","hex_x","hex_y","x","y","Math","sqrt","width","height","darkTheme","createMuiTheme","palette","type","Readme","props","state","closed","document","addEventListener","ev","keyCode","setState","ThemeProvider","theme","className","style","display","IconButton","aria-label","onClick","fontSize","Typography","variant","color","Link","href","paddingTop","paddingBottom","Button","React","Component","useStyles","makeStyles","root","maxWidth","bottom","right","position","maxHeight","zIndex","colorScaleContainer","colorScaleImage","directionMarker","transform","transition","transitions","create","duration","shortest","tableContent","overflowX","tableRow","cursor","backgroundColor","InfoPanel","classes","selectedNode","directedCommutesObject","directedCommutes","values","sort","aTotal","bTotal","maxCommuters","commute","numCommuters","max","Card","CardHeader","avatar","clsx","action","deselect","title","subheader","name","titleTypographyProps","subheaderTypographyProps","CardMedia","src","process","alt","paddingLeft","boxSizing","textAlign","paddingRight","TableContainer","Table","table","size","TableHead","TableRow","TableCell","align","TableBody","map","key","select","component","scope","App","hoverNode","locations","commuters","bind","window","createViz","createTooltip","bbox","container","node","getBBox","scale","min","innerWidth","innerHeight","zoomBehaviour","scaleTo","svg","translateTo","hexagons","selectAll","enter","append","attr","d","points","point","join","classed","d3","scaleExtent","on","call","clearSelectStyles","clickedData","newOutbound","commutesForClickedNode","pairNodeID","count","pairNode","div","createAndSetHexagons","createAndSetZoomBehaviour","resetPosition","tooltip","setContent","show","hide","stopPropagation","tippy","trigger","followCursor","plugins","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5850e98e.chunk.js","sourcesContent":["import * as d3 from \"d3\";\n\nclass VizData {\n  constructor(locs, outbound) {\n    this.locs = locs;\n    this.outbound = outbound;\n    this.addIDToLocs();\n    this.addSizeToLocs();\n    this.inbound = this.reverseCommutes(outbound);\n    this.addIDToCommutes();\n  }\n\n  reverseCommutes(outbound) {\n    const inbound = {};\n    for (let [from, toLocations] of Object.entries(outbound)) {\n      for (let [to, data] of Object.entries(toLocations)) {\n        inbound[to] = inbound[to] || {};\n        inbound[to][from] = Object.assign({}, data);;\n      }\n    }\n    return inbound;\n  }\n\n  addIDToLocs() {\n    for (let [id, d] of Object.entries(this.locs)) {\n      d[\"id\"] = id;\n    }\n  }\n\n  addIDToCommutes() {\n    for (const commutes of [this.inbound, this.outbound]) {\n      for (const a of Object.keys(commutes)) {\n        for (const b of Object.keys(commutes[a])) {\n          commutes[a][b].id = b;\n        }\n      }\n    }\n  }\n\n  // Adds a size measure (log of total outbound commuting) to the locations.\n  addSizeToLocs() {\n    for (const origin in this.locs) {\n      let total = 1; // Makes sure we can take the log\n      if (origin in this.outbound) {\n        for (const id in this.outbound[origin]) {\n          if (!isNaN(this.outbound[origin][id].work)) {\n            total += this.outbound[origin][id].work;\n          }\n          if (!isNaN(this.outbound[origin][id].edu)) {\n            total += this.outbound[origin][id].edu;\n          }\n        }\n      }\n      this.locs[origin][\"size\"] = total;\n    }\n  }\n}\n\nclass Hexagon {\n  constructor(hex_x, hex_y) {\n    this.hex_x = hex_x;\n    this.hex_y = hex_y;\n\n    this.x = this.hex_x + 2;\n    this.y = (this.hex_y * 3) / Math.sqrt(3) + 2;\n  }\n\n  points(width) {\n    const height = (Math.sqrt(3) * width) / 3;\n    return [\n      { x: this.x + width, y: this.y + height },\n      { x: this.x, y: this.y + 2 * height },\n      { x: this.x - width, y: this.y + height },\n      { x: this.x - width, y: this.y - height },\n      { x: this.x, y: this.y - 2 * height },\n      { x: this.x + width, y: this.y - height },\n    ];\n  }\n}\n\nfunction createViz(data, app) {\n  // The main containing components\n  const div = d3.select(\".App-container\");\n  const svg = div.append(\"svg\").classed(\"App-svg-content\", true);\n  const container = svg.append(\"g\");\n\n  // Creates the hexagons (main visualisation)\n  const hexagons = container\n    .selectAll(\".hexagon\")\n    .data(Object.values(data.locs))\n    .enter()\n    .append(\"polygon\")\n    .attr(\"points\", (d) => {\n      const hex = new Hexagon(d.hex_x, d.hex_y);\n      return hex\n        .points(0.85)\n        .map((point) => [point.x, point.y].join(\",\"))\n        .join(\" \");\n    })\n    .classed(\"hexagon\", true);\n\n  // Sets behaviour for zooming and panning\n  const zoomBehaviour = d3\n    .zoom()\n    .scaleExtent([1, 50])\n    .on(\"zoom\", () => {\n      container.attr(\"transform\", d3.event.transform);\n    });\n  svg.call(zoomBehaviour);\n\n  // Moves the visualization to the centre of the screen and sizes it according\n  // to the window size\n  const resetPosition = () => {\n    const bbox = container.node().getBBox();\n    const scale =\n      0.9 *\n      Math.min(\n        window.innerWidth / bbox.width,\n        window.innerHeight / bbox.height\n      );\n    zoomBehaviour.scaleTo(svg, scale);\n    zoomBehaviour.translateTo(svg, bbox.width / 2, bbox.height / 2);\n  };\n  resetPosition();\n\n  // Events\n  hexagons.on(\"mouseover\", (d) => {\n    app.setState({ hoverNode: d.id });\n  });\n\n  hexagons.on(\"mouseout\", (d) => {\n    app.setState({ hoverNode: null });\n  });\n\n  const deselectAll = () => {\n    hexagons\n      .classed(\"hexagon-inactive\", false)\n      .classed(\"hexagon-selected\", false)\n      .attr(\"style\", null);\n  };\n  div.on(\"click\", (d) => {\n    app.setState({ selectedNode: null, outbound: true });\n    deselectAll();\n  });\n\n  hexagons.on(\"click\", (clickedData) => {\n    // Stops the click reaching the parent div\n    d3.event.stopPropagation();\n\n    deselectAll();\n\n    // The value that outbound will be set to\n    let newOutbound = true;\n\n    // Reverse the commutes if it's already selected, otherwise select anew\n    if (clickedData.id === app.state.selectedNode) {\n      newOutbound = !app.state.outbound;\n      app.setState((state, props) => ({\n        outbound: !state.outbound,\n      }));\n    } else {\n      app.setState({\n        selectedNode: clickedData.id,\n        outbound: true,\n      });\n    }\n\n    const directedCommutes = newOutbound ? data.outbound : data.inbound;\n    const commutesForClickedNode = directedCommutes[clickedData.id] || {};\n\n    // Calculates maximum number of commuters for colour mapping\n    let maxCommuters = 0;\n    for (const pairNodeID in commutesForClickedNode) {\n      let count = 0;\n      if (\"work\" in commutesForClickedNode[pairNodeID]) {\n        count += commutesForClickedNode[pairNodeID].work;\n      }\n      if (\"edu\" in commutesForClickedNode[pairNodeID]) {\n        count += commutesForClickedNode[pairNodeID].edu;\n      }\n      maxCommuters = Math.max(maxCommuters, count);\n    }\n\n    hexagons\n      .classed(\"hexagon-inactive\", (pairNode) => {\n        return !(pairNode.id in commutesForClickedNode);\n      })\n      .classed(\"hexagon-selected\", (node) => node.id === clickedData.id)\n      .attr(\"style\", (pairNode) => {\n        if (!(pairNode.id in commutesForClickedNode)) {\n          return null;\n        }\n\n        // Colour as a proportion of the maximum number of commuters\n        let count = 0;\n        if (\"work\" in commutesForClickedNode[pairNode.id]) {\n          count += commutesForClickedNode[pairNode.id].work;\n        }\n        if (\"edu\" in commutesForClickedNode[pairNode.id]) {\n          count += commutesForClickedNode[pairNode.id].edu;\n        }\n        return `fill:${d3.interpolateMagma(1 - count / maxCommuters)};`;\n      });\n  });\n}\n\nexport { createViz, VizData, Hexagon };\n","import \"./Readme.css\";\n\nimport React from \"react\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport Button from \"@material-ui/core/Button\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nclass Readme extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { closed: true };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", (ev) => {\n      if (ev.keyCode === 27 && !this.state.closed) {\n        this.setState({ closed: true });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={darkTheme}>\n        <div\n          className=\"Readme-closed\"\n          style={{ display: this.state.closed ? \"block\" : \"none\" }}\n        >\n          <IconButton\n            aria-label=\"readme\"\n            className=\"Readme-open-button\"\n            onClick={() => this.setState({ closed: false })}\n          >\n            <InfoIcon fontSize=\"large\" />\n          </IconButton>\n        </div>\n        <div\n          className={\n            this.state.closed\n              ? \"Readme-container\"\n              : \"Readme-container Readme-container-opened\"\n          }\n        >\n          <IconButton\n            aria-label=\"close-readme\"\n            className=\"Readme-open-button\"\n            onClick={() => this.setState({ closed: true })}\n          >\n            <CloseIcon fontSize=\"large\" />\n          </IconButton>\n          <div className=\"Readme-content\">\n            <Typography variant=\"h2\" color=\"textPrimary\">\n              Commuter Data\n            </Typography>\n            <Typography variant=\"subtitle\" color=\"textSecondary\">\n              This project is a visualisation of the{\" \"}\n              <Link href=\"https://datafinder.stats.govt.nz/data/category/census/2018/commuter-view/\">\n                commuter data\n              </Link>{\" \"}\n              from the 2018 New Zealand Census.\n            </Typography>\n            <div style={{ paddingTop: \"16px\", paddingBottom: \"32px\" }}>\n              <Button\n                variant=\"outlined\"\n                href=\"https://github.com/alex-kennedy/there-back\"\n              >\n                View on GitHub\n              </Button>\n            </div>\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              How Does it Work?\n            </Typography>\n            <Typography variant=\"body1\" color=\"textPrimary\">\n              Each hexagon represents a statistical region of New Zealand. Click\n              one to get started. When clicked, the visualisation shows how many\n              people commute <strong>out</strong> of that region. Clicking again\n              shows how people commute <strong>into</strong> that region. Other\n              regions are coloured based on how many commuters there are\n              relating to the selected node.\n            </Typography>\n            <div style={{ height: \"16px\" }}></div>\n            <Typography variant=\"body1\" color=\"textSecondary\">\n              This project was completed by Alex Kennedy (\n              <Link href=\"https://alexk.nz\">alexk.nz</Link>) for the \"There and\n              Back Again\" data visualisation competition by Stats NZ.\n            </Typography>\n          </div>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default Readme;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 320,\n    bottom: \"16px\",\n    right: \"16px\",\n    position: \"absolute\",\n    maxHeight: \"75%\",\n    zIndex: 2,\n  },\n  colorScaleContainer: {\n    // height: \"32px\",\n  },\n  colorScaleImage: {\n    width: \"100%\",\n    height: \"32px\",\n  },\n  directionMarker: {\n    transform: \"rotate(0deg)\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  outbound: {\n    transform: \"rotate(-135deg)\",\n  },\n  tableContent: {\n    height: \"250px\",\n    overflowX: \"scroll\",\n  },\n  tableRow: {\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#555\",\n    },\n  },\n}));\n\nexport default function InfoPanel(props) {\n  const classes = useStyles();\n\n  if (props.selectedNode === null) {\n    return null;\n  }\n\n  const directedCommutesObject = (props.outbound\n    ? props.data.outbound\n    : props.data.inbound)[props.selectedNode];\n  const directedCommutes = Object.values(directedCommutesObject);\n  directedCommutes.sort((a, b) => {\n    let aTotal = 0;\n    aTotal += a.work || 0;\n    aTotal += a.edu || 0;\n\n    let bTotal = 0;\n    bTotal += b.work || 0;\n    bTotal += b.edu || 0;\n\n    return bTotal - aTotal;\n  });\n\n  let maxCommuters = 0;\n  for (const commute of directedCommutes) {\n    let numCommuters = 0;\n    numCommuters += commute.work || 0;\n    numCommuters += commute.edu || 0;\n    maxCommuters = Math.max(maxCommuters, numCommuters);\n  }\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Card className={classes.root}>\n        <CardHeader\n          avatar={\n            <ArrowForwardIcon\n              className={clsx(classes.directionMarker, {\n                [classes.outbound]: props.outbound,\n              })}\n            />\n          }\n          action={\n            <IconButton aria-label=\"settings\" onClick={props.deselect}>\n              <CloseIcon />\n            </IconButton>\n          }\n          title={props.outbound ? \"Outbound From\" : \"Inbound To\"}\n          subheader={props.data.locs[props.selectedNode].name}\n          titleTypographyProps={{ color: \"textSecondary\" }}\n          subheaderTypographyProps={{ color: \"textPrimary\" }}\n        />\n        <CardMedia className={classes.colorScaleContainer}>\n          <img\n            className={classes.colorScaleImage}\n            src={process.env.PUBLIC_URL + \"magma.png\"}\n            alt=\"Magma colour scale\"\n          />\n          <div\n            style={{\n              width: \"50%\",\n              display: \"inline-block\",\n              paddingLeft: \"8px\",\n              boxSizing: \"border-box\"\n            }}\n          >\n            0\n          </div>\n          <div\n            style={{\n              width: \"50%\",\n              display: \"inline-block\",\n              textAlign: \"right\",\n              paddingRight: \"8px\",\n              boxSizing: \"border-box\"\n            }}\n          >\n            {maxCommuters}\n          </div>\n        </CardMedia>\n        <CardMedia className={classes.tableContent}>\n          <TableContainer>\n            <Table\n              className={classes.table}\n              size=\"small\"\n              aria-label=\"commuters data table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell align=\"right\">Work</TableCell>\n                  <TableCell align=\"right\">Education</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {directedCommutes.map((commute) => {\n                  const work = commute.work || 0;\n                  const edu = commute.edu || 0;\n                  return (\n                    <TableRow\n                      key={commute.id}\n                      onClick={() => {\n                        props.select(props.data.locs[commute.id]);\n                      }}\n                      className={classes.tableRow}\n                    >\n                      <TableCell component=\"th\" scope=\"row\">\n                        {props.data.locs[commute.id].name}\n                      </TableCell>\n                      <TableCell align=\"right\">{work}</TableCell>\n                      <TableCell align=\"right\">{edu}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardMedia>\n      </Card>\n    </ThemeProvider>\n  );\n}\n","import \"./App.css\";\n\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport { VizData, Hexagon } from \"./viz\";\nimport Readme from \"./components/Readme\";\nimport InfoPanel from \"./components/InfoPanel\";\nimport locations from \"./data/loc_payload.json\";\nimport commuters from \"./data/commuters.json\";\nimport tippy, { followCursor } from \"tippy.js\";\nimport 'tippy.js/dist/tippy.css';\nimport 'tippy.js/themes/material.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { selectedNode: null, outbound: true, hoverNode: null };\n    this.data = new VizData(locations, commuters);\n\n    this.select = this.select.bind(this);\n    this.deselect = this.deselect.bind(this);\n  }\n\n  componentDidMount() {\n    window.data = this.data;\n    this.createViz();\n    this.createTooltip();\n  }\n\n  // Moves the visualization to the centre of the screen and sizes it according\n  // to the window size\n  resetPosition() {\n    const bbox = this.container.node().getBBox();\n    const scale =\n      0.9 *\n      Math.min(\n        window.innerWidth / bbox.width,\n        window.innerHeight / bbox.height\n      );\n    this.zoomBehaviour.scaleTo(this.svg, scale);\n    this.zoomBehaviour.translateTo(this.svg, bbox.width / 2, bbox.height / 2);\n  }\n\n  // Creates the hexagons (main visualisation)\n  createAndSetHexagons() {\n    this.hexagons = this.container\n      .selectAll(\".hexagon\")\n      .data(Object.values(this.data.locs))\n      .enter()\n      .append(\"polygon\")\n      .attr(\"points\", (d) => {\n        const hex = new Hexagon(d.hex_x, d.hex_y);\n        return hex\n          .points(0.9)\n          .map((point) => [point.x, point.y].join(\",\"))\n          .join(\" \");\n      })\n      .classed(\"hexagon\", true);\n  }\n\n  // Sets behaviour for zooming and panning\n  createAndSetZoomBehaviour() {\n    this.zoomBehaviour = d3\n      .zoom()\n      .scaleExtent([1, 50])\n      .on(\"zoom\", () => {\n        this.container.attr(\"transform\", d3.event.transform);\n      });\n    this.svg.call(this.zoomBehaviour);\n  }\n\n  clearSelectStyles() {\n    this.hexagons\n      .classed(\"hexagon-inactive\", false)\n      .classed(\"hexagon-selected\", false)\n      .attr(\"style\", null);\n  }\n\n  deselect() {\n    this.setState({ selectedNode: null, outbound: true });\n    this.clearSelectStyles();\n  }\n\n  select(clickedData) {\n    this.clearSelectStyles();\n\n    // The value that outbound will be set to\n    let newOutbound = true;\n\n    // Reverse the commutes if it's already selected, otherwise select anew\n    if (clickedData.id === this.state.selectedNode) {\n      newOutbound = !this.state.outbound;\n      this.setState((state) => ({\n        outbound: !state.outbound,\n      }));\n    } else {\n      this.setState({\n        selectedNode: clickedData.id,\n        outbound: true,\n      });\n    }\n\n    const directedCommutes = newOutbound\n      ? this.data.outbound\n      : this.data.inbound;\n    const commutesForClickedNode = directedCommutes[clickedData.id] || {};\n\n    // Calculates maximum number of commuters for colour mapping\n    let maxCommuters = 0;\n    for (const pairNodeID in commutesForClickedNode) {\n      let count = 0;\n      if (\"work\" in commutesForClickedNode[pairNodeID]) {\n        count += commutesForClickedNode[pairNodeID].work;\n      }\n      if (\"edu\" in commutesForClickedNode[pairNodeID]) {\n        count += commutesForClickedNode[pairNodeID].edu;\n      }\n      maxCommuters = Math.max(maxCommuters, count);\n    }\n\n    this.hexagons\n      .classed(\"hexagon-inactive\", (pairNode) => {\n        return !(pairNode.id in commutesForClickedNode);\n      })\n      .classed(\"hexagon-selected\", (node) => node.id === clickedData.id)\n      .attr(\"style\", (pairNode) => {\n        if (!(pairNode.id in commutesForClickedNode)) {\n          return null;\n        }\n\n        // Colour as a proportion of the maximum number of commuters\n        let count = 0;\n        if (\"work\" in commutesForClickedNode[pairNode.id]) {\n          count += commutesForClickedNode[pairNode.id].work;\n        }\n        if (\"edu\" in commutesForClickedNode[pairNode.id]) {\n          count += commutesForClickedNode[pairNode.id].edu;\n        }\n        return `fill:${d3.interpolateMagma(1 - count / maxCommuters)};`;\n      });\n  }\n\n  createViz() {\n    this.div = d3.select(\".App-container\");\n    this.svg = this.div.append(\"svg\").classed(\"App-svg-content\", true);\n    this.container = this.svg.append(\"g\");\n\n    this.createAndSetHexagons();\n    this.createAndSetZoomBehaviour();\n    this.resetPosition();\n\n    // Events\n    this.hexagons.on(\"mouseover\", (d) => {\n      this.setState({ hoverNode: d.id });\n      this.tooltip.setContent(d.name);\n      this.tooltip.show();\n    });\n\n    this.hexagons.on(\"mouseout\", (d) => {\n      this.setState({ hoverNode: null });\n      this.tooltip.hide();\n    });\n\n    this.div.on(\"click\", (d) => {\n      this.deselect();\n    });\n\n    this.hexagons.on(\"click\", (clickedData) => {\n      d3.event.stopPropagation();\n      this.select(clickedData);\n    });\n  }\n\n  createTooltip() {\n    this.tooltip = tippy(\".App-container\", {\n      trigger: \"manual\",\n      followCursor: true,\n      plugins: [followCursor],\n      duration: [500, 0],\n      theme: \"material\"\n    })[0];\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-container\"></div>\n        <Readme />\n        <InfoPanel\n          outbound={this.state.outbound}\n          selectedNode={this.state.selectedNode}\n          data={this.data}\n          deselect={this.deselect}\n          select={this.select}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import './index.css';\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}